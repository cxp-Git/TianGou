<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.cxp.shop_order.mapper.OrderMapper">



<!--        mybaits 插入数据 将自增id返回注入到 keyProperty    -->
    <insert id="insOrderParent" useGeneratedKeys="true" keyProperty="orderId">
        insert order_parent(user_id,store_id,order_time,order_total_quantity,order_total_price)
            values
            <foreach collection="list" item="item" separator=",">
                (#{item.userId},#{item.storeId},#{item.orderTime},#{item.orderTotalQuantity},#{item.orderTotalPrice})
            </foreach>
    </insert>



    <insert id="insOrderSon">
        insert ignore order_son
            (order_id,commodity_id,purchase_quantity,commodity_price)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.orderId},#{item.commodityId},#{item.purchaseQuantity},#{item.commodityPrice})
        </foreach>
    </insert>



    <select id="ListMoneyChangeByuserIdOrderId" resultType="com.cxp.shop_api.dto.MoneyChange">
        select store_id user_id, order_total_price from order_parent
--         下的的人是我  这个时间点下的单  改订单处于待付款
        where user_id = #{userId} and  order_state = 0
        and order_id in
        <foreach collection="orderIdList" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </select>


    <update id="updOrderStateByuserIdOrderId">
        update order_parent set order_state = 1
--         下的的人是我  这个时间点下的单  改订单处于待付款
        where user_id = #{userId} and order_state = 0
        and order_id in
        <foreach collection="orderIdList" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </update>



    <select id="selChooseNumberByOrderId" resultType="com.cxp.shop_api.dto.CommodityNumberChange">
        select commodity_id,purchase_quantity  from order_son
        inner join order_parent on order_son.order_id = order_parent.order_id
        where user_id = #{userId} and order_state = 1
        and order_parent.order_id in
        <foreach collection="orderIdList" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </select>



    <select id="selStoreSalesCurrentMonth" resultType="com.cxp.shop_api.vo.StoreStatusBeanVO">
        select sum(order_total_quantity) as SalesVolume, sum(order_total_price) as Earnings
        from order_parent
        where store_id = #{storeId} and order_state >0 and DATE_FORMAT(order_time,'%Y%m')=DATE_FORMAT(CURDATE(),'%Y%m')
    </select>

    <select id="selStoreSalesEarnings" resultType="com.cxp.shop_api.vo.StoreStatusBeanVO">
        select sum(order_total_quantity) as SalesVolume, sum(order_total_price) as Earnings
        from order_parent
        where store_id = #{storeId} and order_state > 0
    </select>




    <select id="listStoreOrderParent" resultType="com.cxp.shop_api.entity.OrderParent">
        select  * from order_parent
        where store_id = #{storeId} and order_state > 0
        order by order_id desc
    </select>

    <select id="listUserOrderParent" resultType="com.cxp.shop_api.entity.OrderParent">
        select  * from order_parent
        where user_id = #{userId}
        <if test="null != orderState">
            and order_state = #{orderState}
        </if>
        order by order_id desc
    </select>



<!--    详细订单信息-->

    <resultMap id="OrderParentMap" type="com.cxp.shop_api.entity.OrderParent" autoMapping="true">
        <id column="order_id" property="orderId"/>
        <collection property="orderSonList" ofType="com.cxp.shop_api.entity.OrderSon" autoMapping="true">
            <id column="commodity_id" property="commodityId"/>
        </collection>
    </resultMap>

    <select id="selStoreOrderParent" resultMap="OrderParentMap">
        select p.order_id ,user_id,store_id,order_time,order_total_quantity,order_total_price,order_state,
        commodity_id,purchase_quantity,commodity_price
        from order_parent p inner join order_son s on p.order_id = s.order_id
        where p.order_id = #{orderId}
    </select>

    <select id="selUserOrderParent" resultMap="OrderParentMap">
        select p.order_id ,user_id,store_id,order_time,order_total_quantity,order_total_price,order_state,
        commodity_id,purchase_quantity,commodity_price
        from order_parent p inner join order_son s on p.order_id = s.order_id
        where p.order_id = #{orderId} and user_id = #{userId}
    </select>
</mapper>